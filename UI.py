# Form implementation generated from reading ui file 'Main.ui'
#
# Created by: PyQt6 UI code generator 6.4.2
#
# WARNING: Any manual changes made to this file will be lost when pyuic6 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt6 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def __init__(self, MainWindow):
        self.checked1 = True
        self.checked2 = True

        super().__init__()

        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(640, 480)

        self.centralwidget = QtWidgets.QWidget(parent=MainWindow)
        self.centralwidget.setObjectName("centralwidget")

        self.label = QtWidgets.QLabel(parent=self.centralwidget)
        self.label.setGeometry(QtCore.QRect(10, 10, 71, 41))

        font = QtGui.QFont()
        font.setPointSize(20)
        self.label.setFont(font)
        self.label.setObjectName("label")
        self.label_2 = QtWidgets.QLabel(parent=self.centralwidget)
        self.label_2.setGeometry(QtCore.QRect(80, 10, 71, 41))

        font = QtGui.QFont()
        font.setPointSize(20)
        self.label_2.setFont(font)
        self.label_2.setText("")
        self.label_2.setObjectName("label_2")

        self.checkBox = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox.setGeometry(QtCore.QRect(50, 170, 80, 19))
        self.checkBox.setObjectName("checkBox")
        self.checkBox.setChecked(True)
        self.checkBox.clicked.connect(self.checkbox_toggle)

        self.checkBox_2 = QtWidgets.QCheckBox(parent=self.centralwidget)
        self.checkBox_2.setGeometry(QtCore.QRect(50, 200, 80, 19))
        self.checkBox_2.setObjectName("checkBox_2")
        self.checkBox_2.setChecked(True)
        self.checkBox_2.clicked.connect(self.checkbox2_toggle)

        MainWindow.setCentralWidget(self.centralwidget)
        self.statusbar = QtWidgets.QStatusBar(parent=MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "MainWindow"))
        self.label.setText(_translate("MainWindow", "Ping:"))
        self.checkBox.setText(_translate("MainWindow", "麦克风"))
        self.checkBox_2.setText(_translate("MainWindow", "扬声器"))

    def change_text(self, text):
        _translate = QtCore.QCoreApplication.translate
        self.label_2.setText(_translate("MainWindow", str(text)))

    def checkbox_toggle(self):
        self.checked1 = not self.checked1

    def checkbox2_toggle(self):
        self.checked2 = not self.checked2

    def check1_state(self):
        return self.checked1

    def check2_state(self):
        return self.checked2


class UI_LoginWindow():
    def __init__(self):
        self.usr_pwd = None
        self.usr_name = None
        # -*- coding: utf-8 -*-
        """
        Created on Sun Aug  5 10:34:10 2018
        @author: Administrator
        """
        import tkinter as tk
        import tkinter.messagebox
        import pickle
        # 窗口
        window = tk.Tk()
        window.title('login')
        window.geometry('450x300')
        # 画布放置图片
        canvas = tk.Canvas(window, height=300, width=500)
        canvas.pack(side='top')
        # 标签 用户名密码
        tk.Label(window, text='ip:').place(x=100, y=150)
        tk.Label(window, text='port:').place(x=100, y=190)
        # 用户名输入框
        var_usr_name = tk.StringVar()
        entry_usr_name = tk.Entry(window, textvariable=var_usr_name)
        entry_usr_name.place(x=160, y=150)
        # 密码输入框
        var_usr_pwd = tk.StringVar()
        entry_usr_pwd = tk.Entry(window, textvariable=var_usr_pwd)
        entry_usr_pwd.place(x=160, y=190)

        var_usr_name.set("26.214.15.89")
        var_usr_pwd.set("11451")

        # 登录函数
        def usr_log_in():
            # 输入框获取用户名密码
            self.usr_name = var_usr_name.get()
            self.usr_pwd = var_usr_pwd.get()

            # 用户名密码不能为空
            if self.usr_name == '' or self.usr_pwd == '':
                tk.messagebox.showerror(message='ip or port为空')

            window.destroy()

        # 退出的函数
        def usr_sign_quit():
            window.destroy()
            sys.exit(0)

        # 登录 注册按钮
        bt_login = tk.Button(window, text='登录', command=usr_log_in)
        bt_login.place(x=140, y=230)
        bt_logquit = tk.Button(window, text='退出', command=usr_sign_quit)
        bt_logquit.place(x=280, y=230)
        # 主循环
        window.mainloop()

    def __str__(self):
        return [self.usr_name, self.usr_pwd]


if __name__ == "__main__":
    import sys

    app = QtWidgets.QApplication(sys.argv)
    MainWindow = QtWidgets.QMainWindow()
    ui = Ui_MainWindow()
    ui.setupUi(MainWindow)
    MainWindow.show()
    sys.exit(app.exec())
